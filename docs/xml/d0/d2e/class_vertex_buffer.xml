<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.14.0" xml:lang="en-US">
  <compounddef id="d0/d2e/class_vertex_buffer" kind="class" language="C++" prot="public">
    <compoundname>VertexBuffer</compoundname>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d0/d2e/class_vertex_buffer_1af68fea885e17ed36e59adb8d3a7dc6ed" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int VertexBuffer::m_ID</definition>
        <argsstring></argsstring>
        <name>m_ID</name>
        <qualifiedname>VertexBuffer::m_ID</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engineOne/src/Core/Buffer.h" line="43" column="14" bodyfile="engineOne/src/Core/Buffer.h" bodystart="43" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="d0/d2e/class_vertex_buffer_1a14acba7abcdbbffa497f57148dfd2d63" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>VertexBuffer::VertexBuffer</definition>
        <argsstring>() noexcept</argsstring>
        <name>VertexBuffer</name>
        <qualifiedname>VertexBuffer::VertexBuffer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engineOne/src/Core/Buffer.h" line="24" column="1" bodyfile="engineOne/src/Core/Buffer.cpp" bodystart="4" bodyend="9"/>
      </memberdef>
      <memberdef kind="function" id="d0/d2e/class_vertex_buffer_1ad6674fa9fa32a60be93bd66bc7bb9834" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>VertexBuffer::VertexBuffer</definition>
        <argsstring>(const void *data, unsigned int size, BufferUsage usage=DefaultBufferUsage) noexcept</argsstring>
        <name>VertexBuffer</name>
        <qualifiedname>VertexBuffer::VertexBuffer</qualifiedname>
        <param>
          <type>const void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>size</declname>
        </param>
        <param>
          <type>BufferUsage</type>
          <declname>usage</declname>
          <defval>DefaultBufferUsage</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engineOne/src/Core/Buffer.h" line="25" column="1" bodyfile="engineOne/src/Core/Buffer.cpp" bodystart="11" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="d0/d2e/class_vertex_buffer_1a58adcb823390b0c2bd0b695a742f4a3e" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>VertexBuffer::VertexBuffer</definition>
        <argsstring>(VertexBuffer &amp;&amp;other) noexcept</argsstring>
        <name>VertexBuffer</name>
        <qualifiedname>VertexBuffer::VertexBuffer</qualifiedname>
        <param>
          <type><ref refid="d0/d2e/class_vertex_buffer" kindref="compound">VertexBuffer</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engineOne/src/Core/Buffer.h" line="27" column="1" bodyfile="engineOne/src/Core/Buffer.cpp" bodystart="20" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="d0/d2e/class_vertex_buffer_1a5216726fdd43b2ae8e1439e347717fdd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>VertexBuffer::~VertexBuffer</definition>
        <argsstring>()</argsstring>
        <name>~VertexBuffer</name>
        <qualifiedname>VertexBuffer::~VertexBuffer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engineOne/src/Core/Buffer.h" line="28" column="1" bodyfile="engineOne/src/Core/Buffer.cpp" bodystart="26" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="d0/d2e/class_vertex_buffer_1a4ce46c0eb880ced3f4362852766f24bc" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="d0/d2e/class_vertex_buffer" kindref="compound">VertexBuffer</ref> &amp;</type>
        <definition>VertexBuffer &amp; VertexBuffer::operator=</definition>
        <argsstring>(VertexBuffer &amp;&amp;other) noexcept</argsstring>
        <name>operator=</name>
        <qualifiedname>VertexBuffer::operator=</qualifiedname>
        <param>
          <type><ref refid="d0/d2e/class_vertex_buffer" kindref="compound">VertexBuffer</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engineOne/src/Core/Buffer.h" line="31" column="14" bodyfile="engineOne/src/Core/Buffer.cpp" bodystart="31" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="d0/d2e/class_vertex_buffer_1a7e4ce6bde5c2f39c8640aa6d66b0a032" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>VertexBuffer::VertexBuffer</definition>
        <argsstring>(const VertexBuffer &amp;)=delete</argsstring>
        <name>VertexBuffer</name>
        <qualifiedname>VertexBuffer::VertexBuffer</qualifiedname>
        <param>
          <type>const <ref refid="d0/d2e/class_vertex_buffer" kindref="compound">VertexBuffer</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engineOne/src/Core/Buffer.h" line="33" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d0/d2e/class_vertex_buffer_1a1dab90c1631031da8577683f08644087" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d0/d2e/class_vertex_buffer" kindref="compound">VertexBuffer</ref> &amp;</type>
        <definition>VertexBuffer &amp; VertexBuffer::operator=</definition>
        <argsstring>(const VertexBuffer &amp;)=delete</argsstring>
        <name>operator=</name>
        <qualifiedname>VertexBuffer::operator=</qualifiedname>
        <param>
          <type>const <ref refid="d0/d2e/class_vertex_buffer" kindref="compound">VertexBuffer</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engineOne/src/Core/Buffer.h" line="34" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d0/d2e/class_vertex_buffer_1a09c3081468c1a0ec988167eb6337611c" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void VertexBuffer::Bind</definition>
        <argsstring>() const noexcept</argsstring>
        <name>Bind</name>
        <qualifiedname>VertexBuffer::Bind</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engineOne/src/Core/Buffer.h" line="36" column="6" bodyfile="engineOne/src/Core/Buffer.cpp" bodystart="44" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="d0/d2e/class_vertex_buffer_1a28d36240273e5b4bfeaa6097e30e9c23" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void VertexBuffer::Unbind</definition>
        <argsstring>() const noexcept</argsstring>
        <name>Unbind</name>
        <qualifiedname>VertexBuffer::Unbind</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engineOne/src/Core/Buffer.h" line="37" column="6" bodyfile="engineOne/src/Core/Buffer.cpp" bodystart="49" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="d0/d2e/class_vertex_buffer_1ad64724411c893d8582610ce85687c5d1" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void VertexBuffer::SetData</definition>
        <argsstring>(const void *data, unsigned int size, BufferUsage usage=DefaultBufferUsage) const noexcept</argsstring>
        <name>SetData</name>
        <qualifiedname>VertexBuffer::SetData</qualifiedname>
        <param>
          <type>const void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>size</declname>
        </param>
        <param>
          <type>BufferUsage</type>
          <declname>usage</declname>
          <defval>DefaultBufferUsage</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engineOne/src/Core/Buffer.h" line="38" column="6" bodyfile="engineOne/src/Core/Buffer.cpp" bodystart="55" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="d0/d2e/class_vertex_buffer_1a9ef86408a67de76149606b5503eb8a64" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int VertexBuffer::getID</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getID</name>
        <qualifiedname>VertexBuffer::getID</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engineOne/src/Core/Buffer.h" line="40" column="21" bodyfile="engineOne/src/Core/Buffer.h" bodystart="40" bodyend="40"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="engineOne/src/Core/Buffer.h" line="21" column="1" bodyfile="engineOne/src/Core/Buffer.h" bodystart="22" bodyend="44"/>
    <listofallmembers>
      <member refid="d0/d2e/class_vertex_buffer_1a09c3081468c1a0ec988167eb6337611c" prot="public" virt="non-virtual"><scope>VertexBuffer</scope><name>Bind</name></member>
      <member refid="d0/d2e/class_vertex_buffer_1a9ef86408a67de76149606b5503eb8a64" prot="public" virt="non-virtual"><scope>VertexBuffer</scope><name>getID</name></member>
      <member refid="d0/d2e/class_vertex_buffer_1af68fea885e17ed36e59adb8d3a7dc6ed" prot="private" virt="non-virtual"><scope>VertexBuffer</scope><name>m_ID</name></member>
      <member refid="d0/d2e/class_vertex_buffer_1a4ce46c0eb880ced3f4362852766f24bc" prot="public" virt="non-virtual"><scope>VertexBuffer</scope><name>operator=</name></member>
      <member refid="d0/d2e/class_vertex_buffer_1a1dab90c1631031da8577683f08644087" prot="public" virt="non-virtual"><scope>VertexBuffer</scope><name>operator=</name></member>
      <member refid="d0/d2e/class_vertex_buffer_1ad64724411c893d8582610ce85687c5d1" prot="public" virt="non-virtual"><scope>VertexBuffer</scope><name>SetData</name></member>
      <member refid="d0/d2e/class_vertex_buffer_1a28d36240273e5b4bfeaa6097e30e9c23" prot="public" virt="non-virtual"><scope>VertexBuffer</scope><name>Unbind</name></member>
      <member refid="d0/d2e/class_vertex_buffer_1a14acba7abcdbbffa497f57148dfd2d63" prot="public" virt="non-virtual"><scope>VertexBuffer</scope><name>VertexBuffer</name></member>
      <member refid="d0/d2e/class_vertex_buffer_1ad6674fa9fa32a60be93bd66bc7bb9834" prot="public" virt="non-virtual"><scope>VertexBuffer</scope><name>VertexBuffer</name></member>
      <member refid="d0/d2e/class_vertex_buffer_1a58adcb823390b0c2bd0b695a742f4a3e" prot="public" virt="non-virtual"><scope>VertexBuffer</scope><name>VertexBuffer</name></member>
      <member refid="d0/d2e/class_vertex_buffer_1a7e4ce6bde5c2f39c8640aa6d66b0a032" prot="public" virt="non-virtual"><scope>VertexBuffer</scope><name>VertexBuffer</name></member>
      <member refid="d0/d2e/class_vertex_buffer_1a5216726fdd43b2ae8e1439e347717fdd" prot="public" virt="non-virtual"><scope>VertexBuffer</scope><name>~VertexBuffer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
