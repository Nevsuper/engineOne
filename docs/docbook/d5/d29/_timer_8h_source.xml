<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__timer_8h_source" xml:lang="en-US">
<title>Timer.h</title>
<indexterm><primary>engineOne/src/Core/Timer.h</primary></indexterm>
<programlisting linenumbering="unnumbered">1 <emphasis role="preprocessor">#pragma&#32;once</emphasis>
2 <emphasis role="preprocessor">#include&#32;&lt;Windows.h&gt;</emphasis>
3 
4 <emphasis role="keyword">class&#32;</emphasis>Timer
5 {
6 <emphasis role="keyword">public</emphasis>:
7 &#32;&#32;&#32;&#32;Timer()&#32;noexcept
8 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:
9 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_Frequency{},
10 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_Time{}
11 &#32;&#32;&#32;&#32;{
12 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;QueryPerformanceFrequency(&amp;m_Frequency);
13 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;QueryPerformanceCounter(&amp;m_Time);
14 &#32;&#32;&#32;&#32;}
15 &#32;&#32;&#32;&#32;Timer(<emphasis role="keyword">const</emphasis>&#32;Timer&amp;)&#32;<emphasis role="keyword">noexcept</emphasis>&#32;=&#32;<emphasis role="keyword">delete</emphasis>;
16 &#32;&#32;&#32;&#32;Timer&amp;&#32;operator=(<emphasis role="keyword">const</emphasis>&#32;Timer&amp;)&#32;<emphasis role="keyword">noexcept</emphasis>&#32;=&#32;<emphasis role="keyword">delete</emphasis>;
17 
18 &#32;&#32;&#32;&#32;Timer(Timer&amp;&amp;)&#32;<emphasis role="keyword">noexcept</emphasis>&#32;=&#32;<emphasis role="keywordflow">default</emphasis>;
19 &#32;&#32;&#32;&#32;Timer&amp;&#32;operator=(Timer&amp;&amp;)&#32;<emphasis role="keyword">noexcept</emphasis>&#32;=&#32;<emphasis role="keywordflow">default</emphasis>;
20 
21 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;reset()
22 &#32;&#32;&#32;&#32;{
23 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;QueryPerformanceCounter(&amp;m_Time);
24 &#32;&#32;&#32;&#32;}
25 
26 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;resetFrequency()&#32;<emphasis role="keyword">noexcept</emphasis>
27 &#32;&#32;&#32;&#32;{
28 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;QueryPerformanceFrequency(&amp;m_Frequency);
29 &#32;&#32;&#32;&#32;}
30 
31 &#32;&#32;&#32;&#32;
32 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;elapsed()&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">noexcept</emphasis>
33 &#32;&#32;&#32;&#32;{
34 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;LARGE_INTEGER&#32;currentTime;
35 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;QueryPerformanceCounter(&amp;currentTime);
36 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">double</emphasis><emphasis role="keyword">&gt;</emphasis>(currentTime.QuadPart&#32;-&#32;m_Time.QuadPart)&#32;/&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">double</emphasis><emphasis role="keyword">&gt;</emphasis>(m_Frequency.QuadPart);
37 &#32;&#32;&#32;&#32;}
38 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;elapsedAndReset()&#32;<emphasis role="keyword">noexcept</emphasis>
39 &#32;&#32;&#32;&#32;{
40 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;LARGE_INTEGER&#32;currentTime;
41 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;QueryPerformanceCounter(&amp;currentTime);
42 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;dt&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">double</emphasis><emphasis role="keyword">&gt;</emphasis>(currentTime.QuadPart&#32;-&#32;m_Time.QuadPart)&#32;/&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">double</emphasis><emphasis role="keyword">&gt;</emphasis>(m_Frequency.QuadPart);
43 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_Time&#32;=&#32;currentTime;&#32;<emphasis role="comment">//&#32;reset&#32;after&#32;computing&#32;elapsed</emphasis>
44 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;dt;
45 &#32;&#32;&#32;&#32;}
46 
47 
48 
49 
50 <emphasis role="keyword">private</emphasis>:
51 &#32;&#32;&#32;&#32;LARGE_INTEGER&#32;m_Frequency;
52 &#32;&#32;&#32;&#32;LARGE_INTEGER&#32;m_Time;
53 };
54 
</programlisting></section>
